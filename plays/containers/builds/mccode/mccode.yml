---
- name: McXtrace image builder
  hosts: all
  vars:
    git_version: 2.9999
    mcstas_name: mcstas
    mcxtrace_name: mcxtrace
    package_version: 1.5
    package_name: "{{ mcxtrace_name }}-{{ package_version }}"
    package_archive: "{{ package_name }}.tar.gz"
    source_base: /tmp
    package_path: "{{ source_base }}/{{ package_archive }}"
    source_path: "{{ source_base }}/{{ package_name }}"

    # Mcstas and Mcxtrace
    mcstas_source_path: "{{ source_path }}/mcstas"
    mcstas_comps_path: "{{ source_path }}/mcstas-comps"
    mcstas_build_path: "{{ mcstas_source_path }}/build"
    mcstas_bin_path: "/usr/local/{{ mcstas_name }}/{{ git_version }}-git/bin"
    mcxtrace_source_path: "{{ source_path }}/mcxtrace"
    mcxtrace_comps_path: "{{ source_path }}/mcxtrace-comps"
    mcxtrace_build_path: "{{ mcxtrace_source_path }}/build"
    mcxtrace_bin_path: "/usr/local/{{ mcxtrace_name }}/{{ git_version }}-git/bin"

    # Mcrun and Mxrun
    mcrun_name: mcrun
    mxrun_name: mxrun
    python_tools_path: "{{ source_path }}/tools/Python"
    mcrun_source_path: "{{ python_tools_path }}/{{ mcrun_name }}"
    mcrun_bin_path: "/usr/local/{{ mcstas_name }}/{{ git_version }}-git/tools/Python/{{ mcrun_name }}"
    mxrun_source_path: "{{ python_tools_path }}/{{ mcrun_name }}"
    mxrun_bin_path: "/usr/local/{{ mcxtrace_name }}/{{ git_version }}-git/tools/Python/{{ mxrun_name }}"

    # Mccodelib (Mcrun and Mxrun dependency)
    mccodelib_name: mccodelib
    mccodelib_source_path: "{{ python_tools_path }}/mccodelib"

    # mcpl & ncrystal submodules
    mcpl_name: mcpl
    mcpl_version: 1.3.2
    mcpl_package: "{{ mcpl_name }}-{{ mcpl_version }}"
    mcpl_archive: "{{ mcpl_package }}.tar.gz"

    ansible_bender:
      buildah_from_extra_args: "--ulimit nofile=65535:65535"
      base_image: docker.io/library/centos:7
      target_image:
        name: "mcxtrace_image-{{ package_version }}"
      layering: false

  tasks:
  - name: install prerequisites
    yum:
      state: present
      name:
        - vim
        - epel-release
        - gcc
        - cmake
        - make
        - bison
        - flex
        - libnotify
        - python-setuptools
        - python3
        - python3-setuptools

    # Get the code
  - name: checkout github release of mcxtrace
    get_url:
      url: "https://github.com/McStasMcXtrace/McCode/archive/{{ package_archive }}"
      dest: "{{ package_path }}"

  - name: create required unpack directory
    file:
      state: directory
      path: "{{ source_path }}"

  - name: unpack mcxtrace
    unarchive:
      src: "{{ package_path }}"
      dest: "{{ source_path }}"
      remote_src: yes
      extra_opts: [--strip-components=1]

  # McStas
  - name: "create required {{ mcstas_name }} build directory"
    file:
      state: directory
      path: "{{ mcstas_build_path }}"

  - name: "generate {{ mcstas_name }} make files via cmake"
    command:
      cmd: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release {{ mcstas_source_path }}"
      chdir: "{{ mcstas_build_path }}"

  - name: "build mcstas - {{ mcxtrace_version }}"
    make:
      chdir: "{{ mcstas_build_path }}"
      target: all

  - name: "install mcstas - {{ mcxtrace_version }}"
    make:
      chdir: "{{ mcstas_build_path }}"
      target: install

  # McXtrace
  - name: "create required {{ mcxtrace_name }} build directory"
    file:
      state: directory
      path: "{{ mcxtrace_build_path }}"

  - name: "generate {{ mcxtrace_name }} make files via cmake"
    command:
      cmd: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release {{ mcxtrace_source_path }}"
      chdir: "{{ mcxtrace_build_path }}"

    # TODO, lookup system number of threads
  - name: "build mcxtrace - {{ mcxtrace_version }}"
    make:
      chdir: "{{ mcxtrace_build_path }}"
      target: all

  - name: "install mcxtrace - {{ mcxtrace_version }}"
    make:
      chdir: "{{ mcxtrace_build_path }}"
      target: install

  # Install mcrun python utils
  - name: "create required directory for {{ mcrun_name }}"
    file:
      state: directory
      path: "{{ mcrun_source_path }}"

  - name: "generate {{ mcrun }} make files via cmake"
    command:
      cmd: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release -Denable_{{ mcstas_name }}=1 {{ mcrun_source_path }}"
      chdir: "{{ mcrun_source_path }}"

  - name: "build - {{ mcrun_name }}"
    make:
      chdir: "{{ mcrun_source_path }}"
      target: all

  - name: "install - {{ mcrun_name }}"
    make:
      chdir: "{{ mcrun_source_path }}"
      target: install

  # Install mxrun python utils
  - name: "create required directory for {{ mxrun_name }}"
    file:
      state: directory
      path: "{{ mcrun_source_path }}"

  - name: "generate {{ mxrun }} make files via cmake"
    command:
      cmd: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release -Denable_{{ mcxtrace_name }}=1 {{ mcrun_source_path }}"
      chdir: "{{ mcrun_source_path }}"

  - name: "build - {{ mcrun_name }}"
    make:
      chdir: "{{ mcrun_source_path }}"
      target: all
  
  - name: "install - {{ mcrun_name }}"
    make:
      chdir: "{{ mcrun_source_path }}"
      target: install

  # Install mccodelib (mcstas)
  - name: "create required directory for {{ mccodelib_name }}"
    file:
      state: directory
      path: "{{ mccodelib_source_path }}"

  - name: "generate {{ mccodelib_name }} make files via cmake"
    command:
      cmd: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release -Denable_{{ mcstas_name }}=1 {{ mccodelib_source_path }}"
      chdir: "{{ mccodelib_source_path }}"

  - name: "build - {{ mccodelib_name }}"
    make:
      chdir: "{{ mccodelib_source_path }}"
      target: all

  - name: "install - {{ mccodelib_name }}"
    make:
      chdir: "{{ mccodelib_source_path }}"
      target: install

  # Install mccodelib (mcxtrace)
  - name: "generate {{ mccodelib_name }} make files via cmake"
    command:
      cmd: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release -Denable_{{ mcxtrace_name }}=1 {{ mccodelib_source_path }}"
      chdir: "{{ mccodelib_source_path }}"

  - name: "build - {{ mccodelib_name }}"
    make:
      chdir: "{{ mccodelib_source_path }}"
      target: all
  
  - name: "install - {{ mccodelib_name }}"
    make:
      chdir: "{{ mccodelib_source_path }}"
      target: install

  # Install mcrun/mxrun python dependencies
  - name: "python package dependencies for mxrun"
    pip:
      name:
        - PyYaml
      executable: /usr/bin/pip3

  # Install profile path update
  - name: setup PATH environment
    lineinfile:
      path: /etc/profile.d/mccode_path.sh
      line: 'export PATH="{{ mcstas_bin_path }}:{{ mcxtrace_bin_path }}:{{ mcrun_bin_path }}:{{ mxrun_bin_path }}:$PATH"'
      insertbefore: BOF
      create: yes

  - name: create example folders
    file:
      state: directory
      path: "{{ item }}"
    with_items:
      - "/usr/local/share/{{ mcstas_name }}/examples"
      - "/usr/local/share/{{ mcxtrace_name }}/examples"

  - name: copy examples
    command: "cp -r {{ item.src }} {{ item.dst }}"
    with_items:
     - { src: "{{ mcstas_comps_path }}/examples",
         dst: "/usr/local/share/{{ mcstas_name }}/examples" }
     - { src: "{{ mcxtrace_comps_path }}/examples",
         dst: "/usr/local/share/{{ mcxtrace_name }}/examples" }

  - name: remove source files
    file:
      state: absent
      path: "{{ item }}"
    with_items:
      - "{{ package_path }}"
      - "{{ source_path }}"

